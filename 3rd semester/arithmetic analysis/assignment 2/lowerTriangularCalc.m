## Dimitrios Gkoumas (cs04502)
##
## Χρήση: lowerTriangularCalc(matrix, b)
##
## Μετατρέπει τον πίνακα που δόθηκε σε κάτω τριγωνικό

function [matrix, b] = lowerTriangularCalc (matrix, b)

  [rows, cols] = size(matrix);
  [bRows, bCols] = size(b);

  ## Ελέγχουμε εάν ο πίνακας που δόθηκε είναι τετραγωνικός

  if (rows != cols)
    error("Ο πίνακας που δόθηκε δεν είναι τετραγωνικός!")
  endif

  ## Ελέγχουμε εάν το διάνυσμα b έχει τις ίδιες γραμμές με τον πίνακα και εάν έχει μόνο μια στήλη

  if (bRows != rows || bCols != 1)
    error("Το διάνυσμα b έχει λανθασμένες διαστάσεις!")
  endif



  ## Διαλέγουμε το οδηγό στοιχείο ξεκινόντας από το δεξιότερο έως το αριστερότερο

  for i = rows:-1:2

    ## Διαλέγουμε την οδηγό γραμμή ξεκινόντας από την τελευταία έως την πρώτη

    for m = i-1:-1:1

      ## Υπολογίζουμε τον συντελεστή που χρειαζόμαστε για να μηδενίσουμε το i στοιχείο της m γραμμής

      L(m, i) = matrix(m, i)/matrix(i, i);


      ## Πολλαπλασιάζουμε κάθε στοιχείο της γραμμής m με τον αντίστοιχο συντελεστή L που βρήκαμε παραπάνω

      for n = 1:i
        matrix(m, n) = matrix(m, n) - L(m, i)*matrix(i, n);
      endfor

      ## Παρομοίως, πολλαπλασιάζουμε το στοιχείο του b που αντιστοιχεί στην γραμμή m με τον συντελεστή της γραμμής

      b(m) = b(m) - L(m, i)*b(i);

    endfor
  endfor

endfunction
